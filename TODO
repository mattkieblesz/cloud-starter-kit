- create dev_setup command
    - create ansible provision file for docker deployment

- manage docker containers
    - create docker contianer
    - halt docker contianer
    - run docker container
    - destroy docker contianer

- create dynamic build command
    - create Packer template for web/db from template and AWS AMI machine using AWS/docker/vagrant/, compress it and save in local/remote store
    - use same packer template to create docker image for web/db
    - use same packer template to create vagrant image for web/db
    - finish up build command

- create automated tests using kitchenci for local machine building and checking if play was deployed correctly
- finish up test command

- create db and web IaC at once from terraform templates using created AMIs with packer and save terraform state to local/remote store
- finish up create command

- destroy db and web Iac at once using terraform templates
- finish up destroy command

- create infrasctructure and provision using ansible
- create bare infrasctructure and provision all using ansible
- provision specific tag using ansible
- finish up provision command

- backup envs database by dumping it, compressing it and saving it to local/remote store
- finish up backup command

- create django-starter-kit template which uses cloud-starter-kit as devops tool
- create www.mkitdevelopment.com website base using django-starter-kit
- modify cloud-starter-kit to be using django-starter-kit
- test if it works

- make sure all environments are accessible by dns


































Starter-kit UI pages:
- requirements:
    - build deploy
    - code deploy
    - best coding practices
    - all services tested
- functionalities:
    - haproxy (mkitdevelopment.com is point to micro aws instance with haproxy in it)
    - tinder with scraped products using celery workers and rabitmq with websockets and jquery and react native view for android and iOS (scraping job log on displayed on the page)
    - self hosted osm with leaflet
    - python social auth (facebook/twitter/google)
    - change color of navigation bar (using semantic-ui and recompiling with django forms)
    - machine learning benchmark (linear regression)
    - payments with paymill pro/sth similar
    - using elasticsearch/sorl search with react
    - login page with angular2
    - real time feed + notifications react app
    - performance test by clicking a button (setup simple infra and with small instance run script)
    - godbox
    - fake https
    - create server on demand and destroy 5 minutes after creation (with timer)
- coding exercises:
    - CodeCata:
        - 1
        - 2
        - ..
- languages (hello world):
    - python
    - ruby
    - scala
    - go
    - clojure
    - nodejs
    - PL-SQL
    - Erlang
    - haskel
    - Perl
    - php
    - java
    - c
    - c++
    - c#
    - lua
    - bash
    - assembley
    - matlab
    - Visual Basic .NET
    - pascal
    - Rust
    - CSS
    - Sass
    - less
    - javascript
    - XML
    - JSON
- software (default usecase):
    - supervisor
    - hadoop
    - HBase
    - spark
    - hive
    - cassandra
    - docker
    - postgresql
    - postgis
    - mysql
    - redis
    - memcache
    - mongo
    - jenkins
    - gocd
    - elk
    - sentry
    - elasticsearch
    - solr
    - openstack
    - RabbitMQ
    - Kubernetes
    - Kafka
    - Oozie
    - ZooKeeper
    - Tomcat
    - nginx
    - gunicorn
    - uwsgi
    - vagrant
    - Datadog
    - WordPress
    - apache2
    - Neo4j
    - graphana
    - vmware
    - haproxy
    - kitchenci
    - postfix
    - gitlab enterprise
- provisioners:
    - ansible
    - puppet
    - chef
    - Saltstack
- testing (test log with websockets):
    - integration (services endpoints with unittests)
    - acceptance (payments)
    - unittests (pytest and unittest)
    - infrasctructure (with kitchenci possibly)
- libs (simplest hello world app):
    - flask
    - django
    - rubyonrails
    - cherrypy
    - react
    - angular2
    - fabric
    - boto
    - numpy/scipy/pandas
    - Jupyter
    - Kerberos
    - LDAP
    - pySpark
    - semantic-ui
    - celery
    - Bootstrap
    - react-native
- providers:
    - aws (ec2)
    - ovh (scaleway)
    - azure
